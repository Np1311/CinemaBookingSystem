name: PHP 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

stages:
  - build
  - test
  - deploy


build-job:
  stages: build
  runs-on: ubuntu-latest

  steps:
    - uses: actions/checkout@v2

    - name: Install PHP
      run: |
        sudo add-apt-repository -y ppa:ondrej/php
        sudo apt-get update
        sudo apt-get install -y php8.0-cli php8.0-xml

Instal-composer:
  stages: build
  script: 
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    - php composer-setup.php --install-dir=/usr/local/bin --filename=composer
    - php -r "unlink('composer-setup.php');"

Cache-Composer-packages :
  stages: build
  id: composer-cache
  uses: actions/cache@v2
  with:
    path: vendor
    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
    restore-keys: |
      ${{ runner.os }}-php-

Install-dependencies:
  stages: build
  script: 
    - composer install --prefer-dist --no-progress

test:
  needs: build
  runs-on: ubuntu-latest

  steps:
    - uses: actions/checkout@v2

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Manual testing
      run: |
        echo "Please run the manual test suite."
        echo "Provide details of the tests and their results in the pull request."

deploy:
  needs: test
  runs-on: ubuntu-latest
  if: github.ref == 'refs/heads/main' && github.event_name == 'push'

  steps:
    - uses: actions/checkout@v2

    - name: Install PHP
      run: |
        sudo add-apt-repository -y ppa:ondrej/php
        sudo apt-get update
        sudo apt-get install -y php8.0-cli php8.0-xml

    - name: Install Composer
      run: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php composer-setup.php --install-dir=/usr/local/bin --filename=composer
        php -r "unlink('composer-setup.php');"

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Your deployment commands here
